# Generic things

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
    {% for var, value in item.env.items() %}
        {% if value %}
            ENV {{ var }} {{ value }}
        {% endif %}
    {% endfor %}
{% endif %}

# Distro-specific things

{% if item.image.startswith(('debian:', 'ubuntu:')) %}
# Ubuntu Docker containers don't have any repo data by default, and apt is too
# dumb to grab one on its own if needed.
RUN apt -y update

# Mostly for add-apt-repository and systemctl to work, which are already present
# on a manually installed system, so only do that in the Dockerfile instead of
# the playbook. Also, starting the container with systemd *requires* systemd to
# be present, so there's simply no other way than doing it here.
RUN apt -y install --no-install-recommends sudo bash gnupg software-properties-common systemd cron

# Let the container start with systemd
CMD [ "/lib/systemd/systemd" ]
{% endif %}

{% if item.image.startswith(('almalinux:', 'centos:', 'rockylinux:')) %}
# Let the container start with systemd. This works automagically on EL, but
# let's be explicit, it might be needed in the future.
CMD [ "/sbin/init" ]
{% endif %}
