From 93a00d8d4756a9b3b14c30cbc8ecadf1dea6c352 Mon Sep 17 00:00:00 2001
From: dann frazier <dann.frazier@canonical.com>
Date: Mon, 14 Sep 2020 10:02:13 -0600
Subject: [PATCH 1/3] Avoid 'head' usage in scripts that may run in initramfs

Ubuntu's busybox-initramfs package does not provide the `head` function.
Replace `head` usage with an equivalent `sed` command.
---
 src/luks/clevis-luks-bind.in                      | 2 +-
 src/luks/clevis-luks-common-functions             | 2 +-
 src/luks/systemd/dracut/clevis/module-setup.sh.in | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/luks/clevis-luks-bind.in b/src/luks/clevis-luks-bind.in
index 9c2f9b5..3d8a8b4 100755
--- a/src/luks/clevis-luks-bind.in
+++ b/src/luks/clevis-luks-bind.in
@@ -104,7 +104,7 @@ if [ "${luks_type}" = "luks1" ]; then
     # have to wipe out the LUKSMeta slot priot to adding the new key.
     first_free_cs_slot=$(cryptsetup luksDump "${DEV}" \
                          | sed -rn 's|^Key Slot ([0-7]): DISABLED$|\1|p' \
-                         | head -n 1)
+                         | sed -n 1p)
     if [ -z "${first_free_cs_slot}" ]; then
         echo "There are no more free slots in ${DEV}!" >&2
         exit 1
diff --git a/src/luks/clevis-luks-common-functions b/src/luks/clevis-luks-common-functions
index c52defd..6653ec2 100644
--- a/src/luks/clevis-luks-common-functions
+++ b/src/luks/clevis-luks-common-functions
@@ -86,7 +86,7 @@ clevis_luks_read_slot() {
         local token_id
         token_id=$(cryptsetup luksDump "${DEV}" \
                     | grep -E -B1 "^\s+Keyslot:\s+${SLT}$" \
-                    | head -n 1 | sed -rn 's|^\s+([0-9]+): clevis|\1|p')
+                    | sed -n 1p | sed -rn 's|^\s+([0-9]+): clevis|\1|p')
         if [ -z "${token_id}" ]; then
             echo "Cannot load data from ${DEV} slot:${SLT}. No token found!" >&2
             return 1
diff --git a/src/luks/systemd/dracut/clevis/module-setup.sh.in b/src/luks/systemd/dracut/clevis/module-setup.sh.in
index 3672724..ebf969f 100755
--- a/src/luks/systemd/dracut/clevis/module-setup.sh.in
+++ b/src/luks/systemd/dracut/clevis/module-setup.sh.in
@@ -38,7 +38,7 @@ install() {
         /etc/services \
         @libexecdir@/clevis-luks-askpass \
         clevis-luks-common-functions \
-        head grep sed cut \
+        grep sed cut \
         clevis-decrypt \
         clevis-luks-list \
         cryptsetup \

From 69cff2611c7c3619b2dc51d5a93b72de5e7fde45 Mon Sep 17 00:00:00 2001
From: dann frazier <dann.frazier@canonical.com>
Date: Fri, 11 Sep 2020 16:36:58 -0600
Subject: [PATCH 2/3] initramfs: Make network configuration on-demand

Today we always try to configure the networking before we even know
if it is necessary. It's not necessary if, say, the volume is using a
TPM pin, or perhaps no pin at all and clevis just happens to be
installed. In those cases, the user is stuck waiting for
configure_networking() to finish before they get prompted for a passphrase,
and that can take nearly 5 minutes to timeout if the system is offline.

Let's move the configure_networking() code into clevisloop() and only
run it if we detect a LUKS volume using a tang pin. Since clevisloop()
is executing in the background, the boot can continue in the meantime
allowing the user to unlock via passphrase without first waiting for
network configuration to complete or timeout.

Since we use `clevis-luks-list` to detect the pin type, include it in
in the initramfs.
---
 src/initramfs-tools/hooks/clevis.in           |  2 ++
 .../scripts/local-top/clevis.in               | 32 +++++++++++++------
 2 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/src/initramfs-tools/hooks/clevis.in b/src/initramfs-tools/hooks/clevis.in
index d6ff9ec..cc3b492 100755
--- a/src/initramfs-tools/hooks/clevis.in
+++ b/src/initramfs-tools/hooks/clevis.in
@@ -59,6 +59,8 @@ fi
 copy_exec @bindir@/clevis-decrypt-tang || die 1 "@bindir@/clevis-decrypt-tang not found"
 copy_exec @bindir@/clevis-decrypt-sss || die 1 "@bindir@/clevis-decrypt-sss not found"
 copy_exec @bindir@/clevis-decrypt || die 1 "@bindir@/clevis-decrypt not found"
+copy_exec @bindir@/clevis-luks-common-functions || die 1 "@bindir@/clevis-luks-common-functions not found"
+copy_exec @bindir@/clevis-luks-list || die 1 "@bindir@/clevis-luks-list not found"
 if [ -x @bindir@/clevis-decrypt-tpm2 ]; then
     copy_exec @bindir@/clevis-decrypt-tpm2 || die 1 "@bindir@/clevis-decrypt-tpm2 not found"
     tpm2_creatprimary_bin=$(find_binary "tpm2_createprimary")
diff --git a/src/initramfs-tools/scripts/local-top/clevis.in b/src/initramfs-tools/scripts/local-top/clevis.in
index 77ffc7f..7f235dc 100755
--- a/src/initramfs-tools/scripts/local-top/clevis.in
+++ b/src/initramfs-tools/scripts/local-top/clevis.in
@@ -105,6 +105,12 @@ luks2_decrypt() {
     return 1
 }
 
+has_tang_pin() {
+    local dev="$1"
+
+    clevis luks list -d "${dev}" | grep -q tang
+}
+
 # Wait for askpass, and then try and decrypt immediately. Just in case
 # there are multiple devices that need decrypting, this will loop
 # infinitely (The local-bottom script will kill this after decryption)
@@ -120,6 +126,7 @@ clevisloop() {
     fi
 
     OLD_CRYPTTAB_SOURCE=""
+    local netcfg_attempted=0
 
     while true; do
 
@@ -143,6 +150,11 @@ clevisloop() {
         [ "$CRYPTTAB_SOURCE" = "$OLD_CRYPTTAB_SOURCE" ] && continue
         OLD_CRYPTTAB_SOURCE="$CRYPTTAB_SOURCE"
 
+        if [ $netcfg_attempted -eq 0 ] && has_tang_pin ${CRYPTTAB_SOURCE}; then
+            netcfg_attempted=1
+            do_configure_networking
+        fi
+
         if cryptsetup isLuks --type luks1 "$CRYPTTAB_SOURCE"; then
             # If the device is not initialized, sliently skip it.
             luksmeta test -d "$CRYPTTAB_SOURCE" || continue
@@ -240,16 +252,18 @@ wait_for_device() {
     return $ret
 }
 
-# Make sure networking is set up: if booting via nfs, it already is
-# Doesn't seem to work when added to clevisloop for some reason
-if [ "$boot" != nfs ] && wait_for_device; then
-    clevis_net_cnt=$(clevis_all_netbootable_devices | tr ' ' '\n' | wc -l)
-    if [ -z "$IP" ] && [ "$clevis_net_cnt" -gt 1 ]; then
-        echo ""
-        echo "clevis: Warning: multiple network interfaces available but no ip= parameter provided."
+do_configure_networking() {
+    # Make sure networking is set up: if booting via nfs, it already is
+    # Doesn't seem to work when added to clevisloop for some reason
+    if [ "$boot" != nfs ] && wait_for_device; then
+        clevis_net_cnt=$(clevis_all_netbootable_devices | tr ' ' '\n' | wc -l)
+        if [ -z "$IP" ] && [ "$clevis_net_cnt" -gt 1 ]; then
+            echo ""
+            echo "clevis: Warning: multiple network interfaces available but no ip= parameter provided."
+        fi
+        configure_networking
     fi
-    configure_networking
-fi
+}
 
 clevisloop &
 echo $! >/run/clevis.pid

From 04ce65cc639ee1e88ab118116cad3a658ae04cb3 Mon Sep 17 00:00:00 2001
From: dann frazier <dann.frazier@canonical.com>
Date: Mon, 14 Sep 2020 11:03:31 -0600
Subject: [PATCH 3/3] initramfs: Drop comment about code not working within
 `clevisloop()`

I'm not sure what exactly didn't seem to work when executed inside
`clevisloop()` - I didn't have any problems during my testing. Since
this code *is* now running inside of `clevisloop()` let's just drop
the comment.
---
 src/initramfs-tools/scripts/local-top/clevis.in | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/initramfs-tools/scripts/local-top/clevis.in b/src/initramfs-tools/scripts/local-top/clevis.in
index 7f235dc..c97873e 100755
--- a/src/initramfs-tools/scripts/local-top/clevis.in
+++ b/src/initramfs-tools/scripts/local-top/clevis.in
@@ -254,7 +254,6 @@ wait_for_device() {
 
 do_configure_networking() {
     # Make sure networking is set up: if booting via nfs, it already is
-    # Doesn't seem to work when added to clevisloop for some reason
     if [ "$boot" != nfs ] && wait_for_device; then
         clevis_net_cnt=$(clevis_all_netbootable_devices | tr ' ' '\n' | wc -l)
         if [ -z "$IP" ] && [ "$clevis_net_cnt" -gt 1 ]; then
